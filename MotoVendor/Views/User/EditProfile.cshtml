@model BusinessLogic.DTO.User.UpdateUserDTO;
@{
    ViewData["Title"] = "App - Edit Profile";
}
@section Styles {
    <link rel="stylesheet" href="~/css/editProfile.css" />
}
@section Scripts {
    <script src="~/js/editProfile.js"></script>
}
    <div class="form-container">
        <form asp-action="EditProfile" method="post" enctype="multipart/form-data">
            <input type="hidden" name="id" value="@Model.Id" />
            <div class="profile-header">
                <div class="profil-nickname">
                    <label>@User.Identity.Name</label>
                </div>
                <style>
                    .profile-photo{
                        height: 100px;
                        width: 100px;
                        border: 5px solid #4285F4;
                        border-radius: 100%;
                        overflow: hidden;
                    }
                </style>
                <div class="profile-photo">
                    <style>
                        #photo-select {
                            position: relative;
                            height: 100%;
                            width: 100%;
                        }

                    #photo-select__file {
                        position: absolute;
                        top: 0;
                        left: 0;
                        cursor: pointer;
                        visibility: none;
                        height: 100%;
                        width: 100%;
                        color: transparent;
                    }

                        #photo-select__file::-webkit-file-upload-button {
                            display: none;
                        }

                        #photo-select__selected {
                            position: relative;
                            cursor: pointer;
                            height: 100%;
                            width: 100%;
                        }

                    .photo-select__photo--cursor-over {
                        opacity: 0.5;
                    }

                    .photo-select__remove-img {
                        position: absolute;
                        top: 50%;
                        left: 50%;
                        transform: translate(-50%, -50%);
                        display: none;
                    }

                    .photo-select__remove-img--cursor-over {
                        display: block;
                    }

                    #photo-select__photo {
                        height: 100%;
                        width: 100%;
                    }
                </style>

                <script>
                    document.addEventListener('DOMContentLoaded', () => {
                        const fileUpload = document.getElementById('photo-select__file');
                        const uploadContainer = document.getElementById('photo-select__unselected');
                        const deloadContainer = document.getElementById('photo-select__selected');
                        const selectedImage = document.getElementById('photo-select__photo');
                        const removePhoto = document.querySelector('.photo-select__remove-img');
                        const base64Input = document.getElementById('base64')
                        const extensionInput = document.getElementById('extension');

                    @if (Model.ProfileImage != null && !string.IsNullOrEmpty(Model.ProfileImage.Base64) && !string.IsNullOrEmpty(Model.ProfileImage.Extension))
                    {
                        @:PhotoUploadedState();
                    }

                            function PhotoUploadedState() {
                                uploadContainer.style.display = 'none';
                                deloadContainer.style.display = 'block';
                                fileUpload.style.display = 'none';
                            }
                        function PhotoDeloadedState() {
                            uploadContainer.style.display = 'block';
                            deloadContainer.style.display = 'none';
                            uploadContainer.style.display = 'block';
                            fileUpload.style.display = 'block';
                        }

                        deloadContainer.addEventListener('mouseenter', function () {
                            selectedImage.classList.add('photo-select__photo--cursor-over');
                            removePhoto.classList.add('photo-select__remove-img--cursor-over');
                        });
                        deloadContainer.addEventListener('mouseleave', function () {
                            selectedImage.classList.remove('photo-select__photo--cursor-over');
                            removePhoto.classList.remove('photo-select__remove-img--cursor-over');
                        });
                        deloadContainer.addEventListener('click', () => {
                            fileUpload.value = '';
                            PhotoDeloadedState();
                        });

                        fileUpload.addEventListener('change', function (event) {
                            const file = event.target.files[0];
                            if (file && file.type.startsWith('image/')) {
                                const reader = new FileReader();
                                reader.onload = function (e) {
                                    selectedImage.src = e.target.result;
                                    base64Input.value = e.target.result.split(",")[1];
                                    extensionInput.value = file.name.split('.').pop();
                                };
                                reader.readAsDataURL(file);
                                PhotoUploadedState();
                            } else {
                                alert("Please select a valid image file.");
                            }
                        });
                    });
                </script>

                    <div id="photo-select">
                        <div style="display: block;" id="photo-select__unselected">
                            <div class="photo-select__text">
                                <!--Set up your profile image-->
                            </div>
                            <div class="photo-select__photo-add-icon">
                                <img src="~/images/photo-add-icon.svg" />
                            </div>
                        </div>
                        <div style="display: none;" id="photo-select__selected">
                            @if (Model.ProfileImage != null && !string.IsNullOrEmpty(Model.ProfileImage.Base64) && !string.IsNullOrEmpty(Model.ProfileImage.Extension))
                            {
                                <img id="photo-select__photo" src="data:image/@Model.ProfileImage.Extension;base64,@Model.ProfileImage.Base64" />
                            }
                            else
                            {
                                <img src="~/images/profilowe.jpg" id="photo-select__photo" alt="profil" class="profil-img">
                            }
                            <img class="photo-select__remove-img" src="~/images/remove.svg" />
                        </div>
                        <input id="photo-select__file" type="file" accept="image/*">
                        <input style="display: none"
                               id="base64"
                               type="text"
                               asp-for="ProfileImage.Base64"
                               value="@(Model.ProfileImage?.Base64 ?? string.Empty)" />

                    <input style="display: none"
                           id="extension"
                           type="text"
                           asp-for="ProfileImage.Extension"
                           value="@(Model.ProfileImage?.Extension ?? string.Empty)" />
                </div>
            </div>
        </div>
        <div class="profile-info">
            <div class="info-item">
                <label for="gender">Gender:</label>
                <select asp-for="Gender" id="gender">
                    @foreach (var gender in Enum.GetValues(typeof(DB.Enums.UserGender)).Cast<DB.Enums.UserGender>())
                    {
                        <option value="@gender">
                            @gender
                        </option>
                    }
                </select>
            </div>
            <div class="info-item">
                <label for="age">Age:</label>
                <input type="number" id="age" asp-for="Age" />
            </div>
            <span asp-validation-for="Age" class="text-danger"></span>
            <div class="info-item">
                <label for="description">Description:</label>
                <textarea id="description" asp-for="Description" cols="50" maxlength="600"></textarea>
            </div>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>
        <div class="form-actions">
            <button class="cancel-btn" onclick="window.location.href='/user/ProfileView?id=@Model.Id">Cancel</button>
            <button type="submit" class="create-btn">Save changes</button>
        </div>
    </form>
</div>
